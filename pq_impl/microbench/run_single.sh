#!/bin/bash

# to run: ./run_single <executable to run> <num threads>
#     <executable to run> may be "pipq", "linden", or "lotan"
#     <num threads> is optional, defaults to 96

# -------------------------------------
# CONFIGURE BINDING POLICY
# -------------------------------------

# uncomment which binding policy to use

# employ hyperthreading as we go, then next NUMA zone
#binding_policy="0,96,4,100,8,104,12,108,16,112,20,116,24,120,28,124,32,128,36,132,40,136,44,140,48,144,52,148,56,152,60,156,64,160,68,164,72,168,76,172,80,176,84,180,88,184,92,188,1,97,5,101,9,105,13,109,17,113,21,117,25,121,29,125,33,129,37,133,41,137,45,141,49,145,53,149,57,153,61,157,65,161,69,165,73,169,77,173,81,177,85,181,89,185,93,189,2,98,6,102,10,106,14,110,18,114,22,118,26,122,30,126,34,130,38,134,42,138,46,142,50,146,54,150,58,154,62,158,66,162,70,166,74,170,78,174,82,178,86,182,90,186,94,190,3,99,7,103,11,107,15,111,19,115,23,119,27,123,31,127,35,131,39,135,43,139,47,143,51,147,55,151,59,155,63,159,67,163,71,167,75,171,79,175,83,179,87,183,91,187,95,191"
# fill NUMA zone, then hyperthread, then next NUMA zone
#binding_policy="0,4,8,12,16,20,24,28,32,36,40,44,48,52,56,60,64,68,72,76,80,84,88,92,96,100,104,108,112,116,120,124,128,132,136,140,144,148,152,156,160,164,168,172,176,180,184,188,1,5,9,13,17,21,25,29,33,37,41,45,49,53,57,61,65,69,73,77,81,85,89,93,97,101,105,109,113,117,121,125,129,133,137,141,145,149,153,157,161,165,169,173,177,181,185,189,2,6,10,14,18,22,26,30,34,38,42,46,50,54,58,62,66,70,74,78,82,86,90,94,98,102,106,110,114,118,122,126,130,134,138,142,146,150,154,158,162,166,170,174,178,182,186,190,3,7,11,15,19,23,27,31,35,39,43,47,51,55,59,63,67,71,75,79,83,87,91,95,99,103,107,111,115,119,123,127,131,135,139,143,147,151,155,159,163,167,171,175,179,183,187,191"
# NO hyperthreading
binding_policy="0,4,8,12,16,20,24,28,32,36,40,44,48,52,56,60,64,68,72,76,80,84,88,92,1,5,9,13,17,21,25,29,33,37,41,45,49,53,57,61,65,69,73,77,81,85,89,93,2,6,10,14,18,22,26,30,34,38,42,46,50,54,58,62,66,70,74,78,82,86,90,94,3,7,11,15,19,23,27,31,35,39,43,47,51,55,59,63,67,71,75,79,83,87,91,95,96,100,104,108,112,116,120,124,128,132,136,140,144,148,152,156,160,164,168,172,176,180,184,188,97,101,105,109,113,117,121,125,129,133,137,141,145,149,153,157,161,165,169,173,177,181,185,189,98,102,106,110,114,118,122,126,130,134,138,142,146,150,154,158,162,166,170,174,178,182,186,190,99,103,107,111,115,119,123,127,131,135,139,143,147,151,155,159,163,167,171,175,179,183,187,191"
#binding_policy="1,5,9,13,17,21,25,29,33,37,41,45,49,53,57,61,65,69,73,77,81,85,89,93,2,6,10,14,18,22,26,30,34,38,42,46,50,54,58,62,66,70,74,78,82,86,90,94,3,7,11,15,19,23,27,31,35,39,43,47,51,55,59,63,67,71,75,79,83,87,91,95,96,100,104,108,112,116,120,124,128,132,136,140,144,148,152,156,160,164,168,172,176,180,184,188,97,101,105,109,113,117,121,125,129,133,137,141,145,149,153,157,161,165,169,173,177,181,185,189,98,102,106,110,114,118,122,126,130,134,138,142,146,150,154,158,162,166,170,174,178,182,186,190,99,103,107,111,115,119,123,127,131,135,139,143,147,151,155,159,163,167,171,175,179,183,187,191"
# round robin through the numa zones
#binding_policy="0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191"
# round robin through the numa zones, hyperthreading as we go
#binding_policy="0,1,2,3,96,97,98,99,4,5,6,7,100,101,102,103,8,9,10,11,104,105,106,107,12,13,14,15,108,109,110,111,16,17,18,19,112,113,114,115,20,21,22,23,116,117,118,119,24,25,26,27,120,121,122,123,28,29,30,31,124,125,126,127,32,33,34,35,128,129,130,131,36,37,38,39,132,133,134,135,40,41,42,43,136,137,138,139,44,45,46,47,140,141,142,143,48,49,50,51,144,145,146,147,52,53,54,55,148,149,150,151,56,57,58,59,152,153,154,155,60,61,62,63,156,157,158,159,64,65,66,67,160,161,162,163,68,69,70,71,164,165,166,167,72,73,74,75,168,169,170,171,76,77,78,79,172,173,174,175,80,81,82,83,176,177,178,179,84,85,86,87,180,181,182,183,88,89,90,91,184,185,186,187,92,93,94,95,188,189,190,191"


# -------------------------------------
# END BINDING POLICY
# -------------------------------------

# BENCHMARKS:
# In paper:
# (3) Microbenchmark: timed mixed workload (prefilled to $prefill (-p option))
# (4) Microbenchmark (delete-only): num ops mixed workload
# (5) Phased: phased workload
# (6) Desg: designated thread workload

# default values for optional parameters
DEFAULT_TDS=96

# Assign parameters, using defaults if not provided
PROG=$1
threads=${2:-$DEFAULT_TDS}

benchmark=3
prefill=1000000

max_key=100000000
duration=5000 # note: 1000 = 1 second

# for mixed benchmarks (3 & 4)
inserts=50
deletes=50

# PIPQ specific
counter_threshold=10
counter_max=100
heap_list_size=10000000
max_offset=32

# benchmark specific
ops_per_thread=3840000 # for benchmark 4 only; "4,100:5000000,95:1000000,50:1000000,95:1000000", "2,100:5000000,95:1000000"
phased_workload="2,100:50000000,0:5000000" # for benchmark 5 only
delmin_threads_per_zone=4 # for benchmark 6,8 only

if [[ "$PROG" == "pipq" ]]; then
  ./luigi.pipq.out -k $max_key -b $benchmark -p $prefill -o $ops_per_thread -dz $delmin_threads_per_zone -phased $phased_workload -h $heap_list_size -t $duration -n $threads -i $inserts -d $deletes -ct $counter_threshold -cm $counter_max -m $max_offset -bind $binding_policy
elif [[ "$PROG" == "linden" ]]; then
  ./luigi.linden.out -phased $phased_workload -dz $delmin_threads_per_zone -k $max_key -b $benchmark -p $prefill -t $duration -n $threads -i $inserts -d $deletes -bind $binding_policy
elif [[ "$PROG" == "lotan" ]]; then
  ./luigi.lotan_shavit.out -k $max_key -b $benchmark -p $prefill -o $ops_per_thread -t $duration -n $threads -i $inserts -d $deletes -dz $delmin_threads_per_zone -bind $binding_policy
else
  echo "invalid executable passed"
fi
